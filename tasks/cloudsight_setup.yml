---
# Cloudsight Setup

- name: Cloudsight - setup default
  command: cloudsight setup --deploy-key={{ threatstack_deploy_key | mandatory }}
  register: setup_result
  failed_when: setup_result.stderr and 'FAILED' in setup_result.stderr
  when: not threatstack_hostname and not threatstack_ruleset
  args:
    creates: /opt/threatstack/cloudsight/config/.secret

- name: Cloudsight - setup rule set
  command: cloudsight setup --deploy-key={{ threatstack_deploy_key | mandatory }} --ruleset="{{ threatstack_ruleset }}"
  register: setup_result
  failed_when: setup_result.stderr and 'FAILED' in setup_result.stderr
  when: threatstack_ruleset and not threatstack_hostname
  args:
    creates: /opt/threatstack/cloudsight/config/.secret

- name: Cloudsight - setup hostname
  command: cloudsight setup --deploy-key={{ threatstack_deploy_key | mandatory }} --hostname={{ threatstack_hostname }}
  register: setup_result
  failed_when: setup_result.stderr and 'FAILED' in setup_result.stderr
  when: threatstack_hostname and not threatstack_ruleset
  args:
    creates: /opt/threatstack/cloudsight/config/.secret

- name: Cloudsight - setup hostname/rule set
  command: cloudsight setup --deploy-key={{ threatstack_deploy_key | mandatory }} --ruleset="{{ threatstack_ruleset }}" --hostname={{ threatstack_hostname }}
  register: setup_result
  failed_when: setup_result.stderr and 'FAILED' in setup_result.stderr
  when: threatstack_hostname and threatstack_ruleset
  args:
    creates: /opt/threatstack/cloudsight/config/.secret

# Test
- name: Test cloudsight state
  service:
    name: cloudsight
    enabled: yes
    state: started
